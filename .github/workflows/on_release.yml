name: Release CI/CD # workflow name
on: # trigger
  release:
    branches: [master]
    types:
      - created
  push:
    branches: [release,dev]

jobs:
  # unit_tests:
  #   runs-on: ubuntu-latest # runner

  #   steps: # tasks
  #     - name: Set Github Workspace # access Github Workspace
  #       uses: actions/checkout@v2
  #     - name: Set up Python 3.x # set architecture and Python3
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: "3.x"
  #         architecture: "x64" # architecture

  #     - name: Install test dependencies
  #       uses: ./.github/common/install_test_dependencies

  #     - name: Build from source
  #       uses: ./.github/common/build_from_source

  #     - name: Run unit tests # run unittests
  #       uses: ./.github/common/unit_tests

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macOS-11] #, windows-2019]
    # needs: unit_tests

    steps:
      - name: Set Github Workspace
        uses: actions/checkout@v2
      - name: Set up Python 3.x # set architecture and Python3
        uses: actions/setup-python@v3

      - name: Install dependencies
        uses: ./.github/common/install_dependencies

      - name: Build wheels
        uses: ./.github/common/build_wheels

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
  
  make_sdist:
    name: Make source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Optional, use if you use setuptools_scm
          submodules: true  # Optional, use if you have submodules
      
      - name: Build SDist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz


  upload_to_pypi:
    name: Upload to PyPi index
    needs: [build_wheels, make_sdist]
    runs-on: ubuntu-latest
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Downloads artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Upload to PyPi
        run: echo "TODO: Uploading to PyPi"

    # - uses: pypa/gh-action-pypi-publish@v1.5.0
    #   with:
    #     user: __token__
    #     password: ${{ secrets.pypi_password }}
